[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "app/__init__.py"


[project]
name = "{{ project_name }}"
authors = [{name = "{{ author_family_name }} {{ author_name }}", email = "{{ author_email }}"}]
readme = "README.md"
license = {file = "LICENSE.txt"}
classifiers = ["License :: OSI Approved :: MIT License"]
dynamic = ["version"]
description = "{{ project_description }}"
requires-python = ">=3.8"
dependencies = [
    "loguru>=0.6.0",
    "arrow>=1.2.2",
    "dynaconf>=3.1.8",
    "fastapi>=0.79.0",
    "gunicorn>=20.1.0",
    "loguru>=0.6.0",
    "uvicorn[standard]>=0.17.6"
]


[project.optional-dependencies]
dev=[
    "black>=22.6.0",
    "copier>=6.1.0",
    "darglint>=1.8.1",
    "flake8>=4.0.1",
    "hatch>=1.3.1",
    "isort>=5.10.1",
    "mypy>=0.961",
    "pre-commit>=2.20.0",
    "radon>=5.1.0",
    "rope>=1.2.0",
]

test = [
    "codecov>=2.1.12",
    "pytest>=7.1.2",
    "pytest-cov>=3.0.0",
    "pytest-xdist>=2.5.0",
    "pytest-mock>=3.8.2",
    "httpx>=0.23.1",
    "nox>=2022.11.21",
    "pytest-testinfra>=6.8.0",
]

doc = [
    "mkdocs>=1.3.0",
    "mkdocs-material>=8.3.9",
    "mkdocstrings>=0.19.0",
    "mkdocstrings-python>=0.7.1",
]

[project.urls]
Home = ""


[tool.pytest.ini_options]
# search for tests only in tests/ directory
testpaths = ["tests"]
# make XPASS (“unexpectedly passing”) result to fail the test suite
xfail_strict = true
addopts = "-v -n auto -l -rsxX --strict-markers --tb=short --doctest-modules --cov --cov-append --cov-report=xml:coverage.xml --cov-report=html:htmlcov --junitxml=unit-testresults.xml"
markers = [
    "unit: marks tests as unit tests",
    "composant: marks as composant tests, ie need more than one function",
    "integration: marks as integration tests",
    "infra: marks as tests about containers and infrastructure",
]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
